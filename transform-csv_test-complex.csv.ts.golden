// Code generated by Netspective IGS. DO NOT EDIT.

export interface TransformCsvTestComplexCsv {
  readonly contactId?: number; // Any text that can be converted to an integer value (guessed from 'Contact ID' row 0),
  readonly contactType?: string; // Any arbitrary text (guessed from 'Contact Type' row 0),
  readonly contactSubtype?: unknown; // Unknown property (guessed from 'Contact Subtype' row 0, retried: 5),
  readonly doNotEmail?: unknown; // Unknown property (guessed from 'Do Not Email' row 0, retried: 5),
  readonly doNotPhone?: number; // Any text that can be converted to an integer value (guessed from 'Do Not Phone' row 2),
  readonly doNotMail?: unknown; // Unknown property (guessed from 'Do Not Mail' row 0, retried: 5),
  readonly doNotSms?: unknown; // Unknown property (guessed from 'Do Not Sms' row 0, retried: 5),
  readonly doNotTrade?: unknown; // Unknown property (guessed from 'Do Not Trade' row 0, retried: 5),
  readonly noBulkEmailsUserOptOut?: unknown; // Unknown property (guessed from 'No Bulk Emails (User Opt Out)' row 0, retried: 5),
  readonly legalIdentifier?: unknown; // Unknown property (guessed from 'Legal Identifier' row 0, retried: 5),
  readonly externalIdentifier?: unknown; // Unknown property (guessed from 'External Identifier' row 0, retried: 5),
  readonly sortName?: string; // Any arbitrary text (guessed from 'Sort Name' row 0),
  readonly displayName?: string; // Any arbitrary text (guessed from 'Display Name' row 0),
  readonly nickname?: unknown; // Unknown property (guessed from 'Nickname' row 0, retried: 5),
  readonly legalName?: unknown; // Unknown property (guessed from 'Legal Name' row 0, retried: 5),
  readonly imageUrl?: unknown; // Unknown property (guessed from 'Image Url' row 0, retried: 5),
  readonly preferredCommunicationMethod?: string; // Any arbitrary text (guessed from 'Preferred Communication Method' row 0),
  readonly preferredLanguage?: unknown; // Unknown property (guessed from 'Preferred Language' row 0, retried: 5),
  readonly preferredMailFormat?: string; // Any arbitrary text (guessed from 'Preferred Mail Format' row 0),
  readonly contactHash?: number; // Any text that can be converted to an integer value (guessed from 'Contact Hash' row 0),
  readonly contactSource?: string; // Any arbitrary text (guessed from 'Contact Source' row 0),
  readonly firstName?: string; // Any arbitrary text (guessed from 'First Name' row 0),
  readonly middleName?: string; // Any arbitrary text (guessed from 'Middle Name' row 4),
  readonly lastName?: string; // Any arbitrary text (guessed from 'Last Name' row 0),
  readonly individualPrefix?: string; // Any arbitrary text (guessed from 'Individual Prefix' row 0),
  readonly individualSuffix?: string; // Any arbitrary text (guessed from 'Individual Suffix' row 2),
  readonly formalTitle?: unknown; // Unknown property (guessed from 'Formal Title' row 0, retried: 5),
  readonly communicationStyle?: unknown; // Unknown property (guessed from 'Communication Style' row 0, retried: 5),
  readonly jobTitle?: unknown; // Unknown property (guessed from 'Job Title' row 0, retried: 5),
  readonly gender?: string; // Any arbitrary text (guessed from 'Gender' row 2),
  readonly birthDate?: Date; // Any text that matches MomentJS date format 'YYYY-MM-DD' (guessed from 'Birth Date' row 3),
  readonly deceased?: unknown; // Unknown property (guessed from 'Deceased' row 0, retried: 5),
  readonly deceasedDate?: unknown; // Unknown property (guessed from 'Deceased Date' row 0, retried: 5),
  readonly householdName?: unknown; // Unknown property (guessed from 'Household Name' row 0, retried: 5),
  readonly organizationName?: unknown; // Unknown property (guessed from 'Organization Name' row 0, retried: 5),
  readonly sicCode?: unknown; // Unknown property (guessed from 'Sic Code' row 0, retried: 5),
  readonly uniqueIdOpenid?: unknown; // Unknown property (guessed from 'Unique ID (OpenID)' row 0, retried: 5),
  readonly currentEmployerId?: number; // Any text that can be converted to an integer value (guessed from 'Current Employer ID' row 0),
  readonly contactIsInTrash?: unknown; // Unknown property (guessed from 'Contact is in Trash' row 0, retried: 5),
  readonly createdDate?: Date; // Any text that matches MomentJS date format 'YYYY-MM-DD HH:MM:SS' (guessed from 'Created Date' row 0),
  readonly modifiedDate?: Date; // Any text that matches MomentJS date format 'YYYY-MM-DD HH:MM:SS' (guessed from 'Modified Date' row 0),
  readonly addressee?: string; // Any arbitrary text (guessed from 'Addressee' row 0),
  readonly emailGreeting?: string; // Any arbitrary text (guessed from 'Email Greeting' row 0),
  readonly postalGreeting?: string; // Any arbitrary text (guessed from 'Postal Greeting' row 0),
  readonly currentEmployer?: string; // Any arbitrary text (guessed from 'Current Employer' row 0),
  readonly locationType?: string; // Any arbitrary text (guessed from 'Location Type' row 0),
  readonly streetAddress?: string; // Any arbitrary text (guessed from 'Street Address' row 0),
  readonly streetNumber?: number; // Any text that can be converted to an integer value (guessed from 'Street Number' row 0),
  readonly streetNumberSuffix?: string; // Any arbitrary text (guessed from 'Street Number Suffix' row 0),
  readonly streetName?: string; // Any arbitrary text (guessed from 'Street Name' row 0),
  readonly streetUnit?: unknown; // Unknown property (guessed from 'Street Unit' row 0, retried: 5),
  readonly supplementalAddress1?: string; // Any arbitrary text (guessed from 'Supplemental Address 1' row 0),
  readonly supplementalAddress2?: unknown; // Unknown property (guessed from 'Supplemental Address 2' row 0, retried: 5),
  readonly city?: string; // Any arbitrary text (guessed from 'City' row 0),
  readonly postalCodeSuffix?: unknown; // Unknown property (guessed from 'Postal Code Suffix' row 0, retried: 5),
  readonly postalCode?: number; // Any text that can be converted to an integer value (guessed from 'Postal Code' row 0),
  readonly latitude?: number; // Any text that can be converted to a float value (guessed from 'Latitude' row 0),
  readonly longitude?: number; // Any text that can be converted to a float value (guessed from 'Longitude' row 0),
  readonly addressName?: unknown; // Unknown property (guessed from 'Address Name' row 0, retried: 5),
  readonly masterAddressBelongsTo?: string; // Any arbitrary text (guessed from 'Master Address Belongs To' row 0),
  readonly county?: string; // Any arbitrary text (guessed from 'County' row 0),
  readonly state?: string; // Any arbitrary text (guessed from 'State' row 0),
  readonly country?: string; // Any arbitrary text (guessed from 'Country' row 0),
  readonly phone?: string; // Any arbitrary text (guessed from 'Phone' row 0),
  readonly phoneExtension?: unknown; // Unknown property (guessed from 'Phone Extension' row 0, retried: 5),
  readonly email?: string; // Any text that matches RegExp /^[A-za-z0-9._-]*@[A-za-z0-9_-]*\.[A-Za-z0-9.]*$/ (guessed from 'Email' row 0),
  readonly onHold?: unknown; // Unknown property (guessed from 'On Hold' row 0, retried: 5),
  readonly useForBulkMail?: unknown; // Unknown property (guessed from 'Use for Bulk Mail' row 0, retried: 5),
  readonly signatureText?: unknown; // Unknown property (guessed from 'Signature Text' row 0, retried: 5),
  readonly signatureHtml?: unknown; // Unknown property (guessed from 'Signature Html' row 0, retried: 5),
  readonly imProvider?: unknown; // Unknown property (guessed from 'IM Provider' row 0, retried: 5),
  readonly imScreenName?: unknown; // Unknown property (guessed from 'IM Screen Name' row 0, retried: 5),
  readonly openid?: unknown; // Unknown property (guessed from 'OpenID' row 0, retried: 5),
  readonly worldRegion?: string; // Any arbitrary text (guessed from 'World Region' row 0),
  readonly website?: unknown; // Unknown property (guessed from 'Website' row 0, retried: 5),
  readonly groups?: string; // Any arbitrary text (guessed from 'Group(s)' row 0),
  readonly tags?: string; // Any arbitrary text (guessed from 'Tag(s)' row 2),
  readonly notes?: unknown; // Unknown property (guessed from 'Note(s)' row 0, retried: 5),
  readonly phoneType?: string; // Any arbitrary text (guessed from 'Phone Type' row 0),
  readonly imServiceProvider?: unknown; // Unknown property (guessed from 'IM Service Provider' row 0, retried: 5)
}

export const transformCsvTestComplexCsvContent: TransformCsvTestComplexCsv[] = [
  {
    contactId: 2,
    contactType: "Individual",
    sortName: "Samuels, Jed",
    displayName: "Mr. Jed Samuels",
    preferredCommunicationMethod: "SMS",
    preferredMailFormat: "Both",
    contactHash: 3988235934,
    contactSource: "Sample Data",
    firstName: "Jed",
    lastName: "Samuels",
    individualPrefix: "Mr.",
    currentEmployerId: 52,
    createdDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    modifiedDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    addressee: "Mr. Jed Samuels",
    emailGreeting: "Dear Jed",
    postalGreeting: "Dear Jed",
    currentEmployer: "Urban Empowerment Fund",
    locationType: "Work",
    streetAddress: "190Y Cadell Ave SE",
    streetNumber: 190,
    streetNumberSuffix: "Y",
    streetName: "Cadell",
    supplementalAddress1: "Attn: Development",
    city: "Bowmanstown",
    postalCode: 18030,
    latitude: 40.80116,
    longitude: -75.66158,
    masterAddressBelongsTo: "Urban Empowerment Fund",
    county: "Alameda",
    state: "PA",
    country: "United States",
    phone: "265-5630",
    email: "jeds@notmail.co.pl",
    worldRegion: "America South, Central, North and Caribbean",
    groups: "Newsletter Subscribers",
    phoneType: "Phone"
  },
  {
    contactId: 3,
    contactType: "Individual",
    sortName: "smith.o.carylon98@spamalot.co.uk",
    displayName: "smith.o.carylon98@spamalot.co.uk",
    preferredCommunicationMethod: "SMS",
    preferredMailFormat: "Both",
    contactHash: 990362788,
    contactSource: "Sample Data",
    createdDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    modifiedDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    addressee: "smith.o.carylon98@spamalot.co.uk",
    emailGreeting: "Dear smith.o.carylon98@spamalot.co.uk",
    postalGreeting: "Dear smith.o.carylon98@spamalot.co.uk",
    email: "smith.o.carylon98@spamalot.co.uk",
    groups: "Newsletter Subscribers"
  },
  {
    contactId: 4,
    contactType: "Individual",
    doNotPhone: 1,
    sortName: "Grant, Lawerence",
    displayName: "Mr. Lawerence Grant II",
    preferredMailFormat: "Both",
    contactHash: 2064444768,
    contactSource: "Sample Data",
    firstName: "Lawerence",
    lastName: "Grant",
    individualPrefix: "Mr.",
    individualSuffix: "II",
    gender: "Male",
    createdDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    modifiedDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    addressee: "Mr. Lawerence Grant II",
    emailGreeting: "Dear Lawerence",
    postalGreeting: "Dear Lawerence",
    locationType: "Home",
    streetAddress: "176T Dowlen Blvd S",
    streetNumber: 176,
    streetNumberSuffix: "T",
    streetName: "Dowlen",
    city: "Boston",
    postalCode: 2266,
    latitude: 42.338947,
    longitude: -70.919635,
    county: "Alameda",
    state: "MA",
    country: "United States",
    worldRegion: "America South, Central, North and Caribbean",
    tags: "Volunteer"
  },
  {
    contactId: 5,
    contactType: "Individual",
    sortName: "Terrell, Russell",
    displayName: "Russell Terrell Jr.",
    preferredCommunicationMethod: "Postal Mail",
    preferredMailFormat: "Both",
    contactHash: 127505299,
    contactSource: "Sample Data",
    firstName: "Russell",
    lastName: "Terrell",
    individualSuffix: "Jr.",
    gender: "Male",
    birthDate: new Date("Sat May 04 1996 00:00:00 GMT-0400 (EDT)"),
    createdDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    modifiedDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    addressee: "Russell Terrell Jr.",
    emailGreeting: "Dear Russell",
    postalGreeting: "Dear Russell",
    locationType: "Home",
    streetAddress: "235X States Path NE",
    streetNumber: 235,
    streetNumberSuffix: "X",
    streetName: "States",
    city: "Valrico",
    postalCode: 33595,
    latitude: 27.871964,
    longitude: -82.438841,
    masterAddressBelongsTo: "Terrell family",
    county: "Alameda",
    state: "FL",
    country: "United States",
    worldRegion: "America South, Central, North and Caribbean",
    tags: "Volunteer"
  },
  {
    contactId: 6,
    contactType: "Individual",
    doNotPhone: 1,
    sortName: "Adams, Scarlet",
    displayName: "Scarlet Adams",
    preferredCommunicationMethod: "Phone",
    preferredMailFormat: "Both",
    contactHash: 2620107037,
    contactSource: "Sample Data",
    firstName: "Scarlet",
    middleName: "W",
    lastName: "Adams",
    gender: "Female",
    birthDate: new Date("Tue Nov 05 1957 00:00:00 GMT-0500 (EST)"),
    createdDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    modifiedDate: new Date("Wed Jul 13 2016 11:00:00 GMT-0400 (EDT)"),
    addressee: "Scarlet Adams",
    emailGreeting: "Dear Scarlet",
    postalGreeting: "Dear Scarlet",
    phone: "(449) 428-2300",
    email: "adamss68@lol.biz",
    groups: "Newsletter Subscribers",
    tags: "Major Donor,Volunteer",
    phoneType: "Phone"
  },
];