// Code generated by Netspective IGS. DO NOT EDIT.

export interface TransformCsvTestComplexCsv {
  readonly contactId?: number; // Any text that can be converted to an integer value (guessed from 'Contact ID' row 1)
  readonly contactType?: string; // Any arbitrary text (guessed from 'Contact Type' row 1)
  readonly contactSubtype?: unknown; // Unknown property (guessed from 'Contact Subtype' row 1, retries: 5)
  readonly doNotEmail?: unknown; // Unknown property (guessed from 'Do Not Email' row 1, retries: 5)
  readonly doNotPhone?: number; // Any text that can be converted to an integer value (guessed from 'Do Not Phone' row 3)
  readonly doNotMail?: unknown; // Unknown property (guessed from 'Do Not Mail' row 1, retries: 5)
  readonly doNotSms?: unknown; // Unknown property (guessed from 'Do Not Sms' row 1, retries: 5)
  readonly doNotTrade?: unknown; // Unknown property (guessed from 'Do Not Trade' row 1, retries: 5)
  readonly noBulkEmailsUserOptOut?: unknown; // Unknown property (guessed from 'No Bulk Emails (User Opt Out)' row 1, retries: 5)
  readonly legalIdentifier?: unknown; // Unknown property (guessed from 'Legal Identifier' row 1, retries: 5)
  readonly externalIdentifier?: unknown; // Unknown property (guessed from 'External Identifier' row 1, retries: 5)
  readonly sortName?: string; // Any arbitrary text (guessed from 'Sort Name' row 1)
  readonly displayName?: string; // Any arbitrary text (guessed from 'Display Name' row 1)
  readonly nickname?: unknown; // Unknown property (guessed from 'Nickname' row 1, retries: 5)
  readonly legalName?: unknown; // Unknown property (guessed from 'Legal Name' row 1, retries: 5)
  readonly imageUrl?: unknown; // Unknown property (guessed from 'Image Url' row 1, retries: 5)
  readonly preferredCommunicationMethod?: string; // Any arbitrary text (guessed from 'Preferred Communication Method' row 1)
  readonly preferredLanguage?: unknown; // Unknown property (guessed from 'Preferred Language' row 1, retries: 5)
  readonly preferredMailFormat?: string; // Any arbitrary text (guessed from 'Preferred Mail Format' row 1)
  readonly contactHash?: number; // Any text that can be converted to an integer value (guessed from 'Contact Hash' row 1)
  readonly contactSource?: string; // Any arbitrary text (guessed from 'Contact Source' row 1)
  readonly firstName?: string; // Any arbitrary text (guessed from 'First Name' row 1)
  readonly middleName?: string; // Any arbitrary text (guessed from 'Middle Name' row 5)
  readonly lastName?: string; // Any arbitrary text (guessed from 'Last Name' row 1)
  readonly individualPrefix?: string; // Any arbitrary text (guessed from 'Individual Prefix' row 1)
  readonly individualSuffix?: string; // Any arbitrary text (guessed from 'Individual Suffix' row 3)
  readonly formalTitle?: unknown; // Unknown property (guessed from 'Formal Title' row 1, retries: 5)
  readonly communicationStyle?: unknown; // Unknown property (guessed from 'Communication Style' row 1, retries: 5)
  readonly jobTitle?: unknown; // Unknown property (guessed from 'Job Title' row 1, retries: 5)
  readonly gender?: string; // Any arbitrary text (guessed from 'Gender' row 3)
  readonly birthDate?: Date; // Any text that matches MomentJS date format 'YYYY-MM-DD' (guessed from 'Birth Date' row 4)
  readonly deceased?: unknown; // Unknown property (guessed from 'Deceased' row 1, retries: 5)
  readonly deceasedDate?: unknown; // Unknown property (guessed from 'Deceased Date' row 1, retries: 5)
  readonly householdName?: unknown; // Unknown property (guessed from 'Household Name' row 1, retries: 5)
  readonly organizationName?: unknown; // Unknown property (guessed from 'Organization Name' row 1, retries: 5)
  readonly sicCode?: unknown; // Unknown property (guessed from 'Sic Code' row 1, retries: 5)
  readonly uniqueIdOpenid?: unknown; // Unknown property (guessed from 'Unique ID (OpenID)' row 1, retries: 5)
  readonly currentEmployerId?: number; // Any text that can be converted to an integer value (guessed from 'Current Employer ID' row 1)
  readonly contactIsInTrash?: unknown; // Unknown property (guessed from 'Contact is in Trash' row 1, retries: 5)
  readonly createdDate?: Date; // Any text that matches MomentJS date format 'YYYY-MM-DD HH:MM:SS' (guessed from 'Created Date' row 1)
  readonly modifiedDate?: Date; // Any text that matches MomentJS date format 'YYYY-MM-DD HH:MM:SS' (guessed from 'Modified Date' row 1)
  readonly addressee?: string; // Any arbitrary text (guessed from 'Addressee' row 1)
  readonly emailGreeting?: string; // Any arbitrary text (guessed from 'Email Greeting' row 1)
  readonly postalGreeting?: string; // Any arbitrary text (guessed from 'Postal Greeting' row 1)
  readonly currentEmployer?: string; // Any arbitrary text (guessed from 'Current Employer' row 1)
  readonly locationType?: string; // Any arbitrary text (guessed from 'Location Type' row 1)
  readonly streetAddress?: string; // Any arbitrary text (guessed from 'Street Address' row 1)
  readonly streetNumber?: number; // Any text that can be converted to an integer value (guessed from 'Street Number' row 1)
  readonly streetNumberSuffix?: string; // Any arbitrary text (guessed from 'Street Number Suffix' row 1)
  readonly streetName?: string; // Any arbitrary text (guessed from 'Street Name' row 1)
  readonly streetUnit?: unknown; // Unknown property (guessed from 'Street Unit' row 1, retries: 5)
  readonly supplementalAddress1?: string; // Any arbitrary text (guessed from 'Supplemental Address 1' row 1)
  readonly supplementalAddress2?: unknown; // Unknown property (guessed from 'Supplemental Address 2' row 1, retries: 5)
  readonly city?: string; // Any arbitrary text (guessed from 'City' row 1)
  readonly postalCodeSuffix?: unknown; // Unknown property (guessed from 'Postal Code Suffix' row 1, retries: 5)
  readonly postalCode?: number; // Any text that can be converted to an integer value (guessed from 'Postal Code' row 1)
  readonly latitude?: number; // Any text that can be converted to a float value (guessed from 'Latitude' row 1)
  readonly longitude?: number; // Any text that can be converted to a float value (guessed from 'Longitude' row 1)
  readonly addressName?: unknown; // Unknown property (guessed from 'Address Name' row 1, retries: 5)
  readonly masterAddressBelongsTo?: string; // Any arbitrary text (guessed from 'Master Address Belongs To' row 1)
  readonly county?: string; // Any arbitrary text (guessed from 'County' row 1)
  readonly state?: string; // Any arbitrary text (guessed from 'State' row 1)
  readonly country?: string; // Any arbitrary text (guessed from 'Country' row 1)
  readonly phone?: string; // Any arbitrary text (guessed from 'Phone' row 1)
  readonly phoneExtension?: unknown; // Unknown property (guessed from 'Phone Extension' row 1, retries: 5)
  readonly email?: string; // Any text that matches RegExp /^[A-za-z0-9._-]*@[A-za-z0-9_-]*\.[A-Za-z0-9.]*$/ (guessed from 'Email' row 1)
  readonly onHold?: unknown; // Unknown property (guessed from 'On Hold' row 1, retries: 5)
  readonly useForBulkMail?: unknown; // Unknown property (guessed from 'Use for Bulk Mail' row 1, retries: 5)
  readonly signatureText?: unknown; // Unknown property (guessed from 'Signature Text' row 1, retries: 5)
  readonly signatureHtml?: unknown; // Unknown property (guessed from 'Signature Html' row 1, retries: 5)
  readonly imProvider?: unknown; // Unknown property (guessed from 'IM Provider' row 1, retries: 5)
  readonly imScreenName?: unknown; // Unknown property (guessed from 'IM Screen Name' row 1, retries: 5)
  readonly openid?: unknown; // Unknown property (guessed from 'OpenID' row 1, retries: 5)
  readonly worldRegion?: string; // Any arbitrary text (guessed from 'World Region' row 1)
  readonly website?: unknown; // Unknown property (guessed from 'Website' row 1, retries: 5)
  readonly groups?: string; // Any arbitrary text (guessed from 'Group(s)' row 1)
  readonly tags?: string; // Any arbitrary text (guessed from 'Tag(s)' row 3)
  readonly notes?: unknown; // Unknown property (guessed from 'Note(s)' row 1, retries: 5)
  readonly phoneType?: string; // Any arbitrary text (guessed from 'Phone Type' row 1)
  readonly imServiceProvider?: unknown; // Unknown property (guessed from 'IM Service Provider' row 1, retries: 5)
}

export const transformCsvTestComplexCsvContent: TransformCsvTestComplexCsv[] = [{'Contact ID':2,'Contact Type':'Individual','Sort Name':'Samuels, Jed','Display Name':'Mr. Jed Samuels','Preferred Communication Method':'SMS','Preferred Mail Format':'Both','Contact Hash':3988235934,'Contact Source':'Sample Data','First Name':'Jed','Last Name':'Samuels','Individual Prefix':'Mr.','Current Employer ID':52,'Created Date':new Date(1468422000380),'Modified Date':new Date(1468422000420),Addressee:'Mr. Jed Samuels','Email Greeting':'Dear Jed','Postal Greeting':'Dear Jed','Current Employer':'Urban Empowerment Fund','Location Type':'Work','Street Address':'190Y Cadell Ave SE','Street Number':190,'Street Number Suffix':'Y','Street Name':'Cadell','Supplemental Address 1':'Attn: Development',City:'Bowmanstown','Postal Code':18030,Latitude:40.80116,Longitude:-75.66158,'Master Address Belongs To':'Urban Empowerment Fund',County:'Alameda',State:'PA',Country:'United States',Phone:'265-5630',Email:'jeds@notmail.co.pl','World Region':'America South, Central, North and Caribbean','Group(s)':'Newsletter Subscribers','Phone Type':'Phone'},{'Contact ID':3,'Contact Type':'Individual','Sort Name':'smith.o.carylon98@spamalot.co.uk','Display Name':'smith.o.carylon98@spamalot.co.uk','Preferred Communication Method':'SMS','Preferred Mail Format':'Both','Contact Hash':990362788,'Contact Source':'Sample Data','Created Date':new Date(1468422000380),'Modified Date':new Date(1468422000390),Addressee:'smith.o.carylon98@spamalot.co.uk','Email Greeting':'Dear smith.o.carylon98@spamalot.co.uk','Postal Greeting':'Dear smith.o.carylon98@spamalot.co.uk',Email:'smith.o.carylon98@spamalot.co.uk','Group(s)':'Newsletter Subscribers'},{'Contact ID':4,'Contact Type':'Individual','Do Not Phone':1,'Sort Name':'Grant, Lawerence','Display Name':'Mr. Lawerence Grant II','Preferred Mail Format':'Both','Contact Hash':2064444768,'Contact Source':'Sample Data','First Name':'Lawerence','Last Name':'Grant','Individual Prefix':'Mr.','Individual Suffix':'II',Gender:'Male','Created Date':new Date(1468422000380),'Modified Date':new Date(1468422000430),Addressee:'Mr. Lawerence Grant II','Email Greeting':'Dear Lawerence','Postal Greeting':'Dear Lawerence','Location Type':'Home','Street Address':'176T Dowlen Blvd S','Street Number':176,'Street Number Suffix':'T','Street Name':'Dowlen',City:'Boston','Postal Code':2266,Latitude:42.338947,Longitude:-70.919635,County:'Alameda',State:'MA',Country:'United States','World Region':'America South, Central, North and Caribbean','Tag(s)':'Volunteer'},{'Contact ID':5,'Contact Type':'Individual','Sort Name':'Terrell, Russell','Display Name':'Russell Terrell Jr.','Preferred Communication Method':'Postal Mail','Preferred Mail Format':'Both','Contact Hash':127505299,'Contact Source':'Sample Data','First Name':'Russell','Last Name':'Terrell','Individual Suffix':'Jr.',Gender:'Male','Birth Date':new Date(831182400000),'Created Date':new Date(1468422000380),'Modified Date':new Date(1468422000420),Addressee:'Russell Terrell Jr.','Email Greeting':'Dear Russell','Postal Greeting':'Dear Russell','Location Type':'Home','Street Address':'235X States Path NE','Street Number':235,'Street Number Suffix':'X','Street Name':'States',City:'Valrico','Postal Code':33595,Latitude:27.871964,Longitude:-82.438841,'Master Address Belongs To':'Terrell family',County:'Alameda',State:'FL',Country:'United States','World Region':'America South, Central, North and Caribbean','Tag(s)':'Volunteer'},{'Contact ID':6,'Contact Type':'Individual','Do Not Phone':1,'Sort Name':'Adams, Scarlet','Display Name':'Scarlet Adams','Preferred Communication Method':'Phone','Preferred Mail Format':'Both','Contact Hash':2620107037,'Contact Source':'Sample Data','First Name':'Scarlet','Middle Name':'W','Last Name':'Adams',Gender:'Female','Birth Date':new Date(-383598000000),'Created Date':new Date(1468422000380),'Modified Date':new Date(1468422000400),Addressee:'Scarlet Adams','Email Greeting':'Dear Scarlet','Postal Greeting':'Dear Scarlet',Phone:'(449) 428-2300',Email:'adamss68@lol.biz','Group(s)':'Newsletter Subscribers','Tag(s)':'Major Donor,Volunteer','Phone Type':'Phone'}];